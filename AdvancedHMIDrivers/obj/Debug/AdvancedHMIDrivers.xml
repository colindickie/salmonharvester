<?xml version="1.0"?>
<doc>
<assembly>
<name>
AdvancedHMIDrivers
</name>
</assembly>
<members>
<member name="M:AdvancedHMIDrivers.PLCDataConversion.WordsToString(System.Int32[])">
	<summary>
 Convert an array of integers to a string
 This is used when storing strings in an integer data table
 </summary>
	<param name="words"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AdvancedHMIDrivers.PLCDataConversion.WordsToString(System.Int32[],System.Int32)">
	<summary>
 Convert an array of integers to a string
 This is used when storing strings in an integer data table
 </summary>
	<param name="words"></param>
	<param name="index"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AdvancedHMIDrivers.PLCDataConversion.WordsToString(System.Int32[],System.Int32,System.Int32)">
	<summary>
 Convert an array of integers to a string
 This is used when storing strings in an integer data table
 </summary>
	<param name="words"></param>
	<param name="index"></param>
	<param name="wordCount"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AdvancedHMIDrivers.PLCDataConversion.StringToWords(System.String)">
	<summary>
 Convert a string to an array of words
 Can be used when writing a string into an integer data table
 </summary>
	<param name="source"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AdvancedHMIDrivers.AllenBradleyPCCC.GetProcessorType">
	<summary>
 Retreives the processor code by using the get status command
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AdvancedHMIDrivers.AllenBradleyPCCC.GetDataMemory">
	<summary>
 Retreives the list of data tables and number of elements in each
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AdvancedHMIDrivers.AllenBradleyPCCC.GetSlotCount">
	<summary>
 Get the number of slots in the rack
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AdvancedHMIDrivers.AllenBradleyPCCC.GetIOConfig">
	<summary>
 Get IO card list currently in rack
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AdvancedHMIDrivers.AllenBradleyPCCC.GetSLCIOConfig">
	<summary>
 Get IO card list currently in rack of a SLC
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AdvancedHMIDrivers.AllenBradleyPCCC.GetML1500IOConfig">
	<summary>
 Get IO card list currently in rack of a ML1500
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AdvancedHMIDrivers.AllenBradleyPCCC.Write(System.String,System.Int32)">
	<summary>
 Write a single integer value to a PLC data table
 The startAddress is in the common form of AB addressing (e.g. N7:0)
 </summary>
	<param name="startAddress"></param>
	<param name="dataToWrite"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AdvancedHMIDrivers.AllenBradleyPCCC.Write(System.String,System.Int32,System.Int32[])">
	<summary>
 Write multiple consectutive integer values to a PLC data table
 The startAddress is in the common form of AB addressing (e.g. N7:0)
 </summary>
	<param name="startAddress"></param>
	<param name="numberOfElements"></param>
	<param name="dataToWrite"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AdvancedHMIDrivers.AllenBradleyPCCC.Write(System.String,System.Single)">
	<summary>
 Write a single floating point value to a data table
 The startAddress is in the common form of AB addressing (e.g. F8:0)
 </summary>
	<param name="startAddress"></param>
	<param name="dataToWrite"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AdvancedHMIDrivers.AllenBradleyPCCC.Write(System.String,System.Int32,System.Single[])">
	<summary>
 Write multiple consectutive floating point values to a PLC data table
 The startAddress is in the common form of AB addressing (e.g. F8:0)
 </summary>
	<param name="startAddress"></param>
	<param name="numberOfElements"></param>
	<param name="dataToWrite"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:AdvancedHMIDrivers.AllenBradleyPCCC.Write(System.String,System.String)">
	<summary>
 Write a string value to a string data table
 The startAddress is in the common form of AB addressing (e.g. ST9:0)
 </summary>
	<param name="startAddress"></param>
	<param name="dataToWrite"></param>
	<returns></returns>
	<remarks></remarks>
</member><member name="P:AdvancedHMIDrivers.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:AdvancedHMIDrivers.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:AdvancedHMIDrivers.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
</members>
</doc>